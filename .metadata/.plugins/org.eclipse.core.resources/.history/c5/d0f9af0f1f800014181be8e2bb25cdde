package graphics;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferInt;
import java.util.Random;

import core.Loop;

public class EpicDisplay extends PixelContainer {
	
	private PixelContainer container;
	private BufferedImage img;
	private int[] pixels;
	private Random rand = new Random();
	
	public EpicDisplay(int w, int h) {
		super(w, h);
		
		container = new PixelContainer(20, 20);
		img = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
		pixels = ((DataBufferInt)img.getRaster().getDataBuffer()).getData();
		
		for (int i = 0; i < 20 * 20; i++) {
			container.pixels[i] = rand.nextInt() * (rand.nextInt(10) / 8);
		}
	}
	
	public void render(Graphics g, Loop time) {
		//int x = (DisplayManager.getFrameWidth() - img.getWidth()) / 2;
		//System.out.println(x);
		clear();
		int x = 0, y = 0;
		for (int i = 0; i < 10; i++) {
			x = (int) ((Math.sin(((time.getTime() + i) * 300) / 4000.0 * (Math.PI / 2)) * 75));
			y = (int) ((Math.cos(((time.getTime() + i) * 300) / 4000.0 * (3 * Math.PI / 2)) * 40));
			
			formatPixels(container, (this.width - 20) / 2 + x, (this.height - 25) / 2 + y);
		}
		
		for (int i = 0; i < img.getWidth() * img.getHeight(); i++) {
			pixels[i] = container.pixels[i];
		}
	}
	
	public void clear() {
		System.out.println("LOL");
		for (int i = 0; i < pixels.length; i++) {
			pixels[i] = 0;
		}
	}
}
